<div>
    <h1> Upload Image</h1>
</div>

<div>
    <div class="col-sm-8">
        <div>
            <input id="inp" type='file'>
            <img id="img" height="150">
            <br />
            <button id="toClarifai">Predict</button>
        </div>
    </div>
</div>

<hr />

<div>
    <h4>Whether is it a receipt: </h4>
    <label id="try"></label>
</div>

<hr />

<h1>Read text from image:</h1>
Enter the URL to an image of text, then click
the <strong>Read image</strong> button.


Image to read:
<input type="text" name="inputImage" id="inputImage"
       value="http://bucket-test232.s3.amazonaws.com/tester/test1/5c43798f9d036.image.jpg" />
<button onclick="processImage()">Read image</button>
<br><br>
<div id="wrapper" style="width:1020px; display:table;">
    <div id="jsonOutput" style="width:600px; display:table-cell;">
        Response:
        <br><br>
        <textarea id="responseTextArea" class="UIInput"
                  style="width:580px; height:400px;"></textarea>
    </div>
    <div id="imageDiv" style="width:420px; display:table-cell;">
        Source image:
        <br><br>
        <img id="sourceImage" width="400" />
    </div>
</div>


<script type="text/javascript" src="https://sdk.clarifai.com/js/clarifai-latest.js">

    const Clarifai = require('clarifai');

</script>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>

<script>
    //Initialise App
    const app = new Clarifai.App({

        apiKey: ''
    });



    var x = document.getElementById("try");






    function readFile() {



        if (this.files && this.files[0]) {



            var FR = new FileReader();



            FR.addEventListener("load", function (e) {
                document.getElementById("img").src = e.target.result;



                console.dir(e.target.result);
                let image = e.target.result;
                image = image.replace("data:image/jpeg;base64,", "")




                app.models.predict({ id: '', version: "" }, { base64: image }).then(
                    function (response) {
                        var concepts = response['outputs'][0]['data']['concepts']
                        console.dir(concepts[0].value.toFixed(20));
                        x.innerHTML = concepts[0].value.toFixed(18) + '%' + ' This is a receipt.';
                    },
                    function (err) {
                        // there was an error
                        console.dir(err);
                        x.innerHTML = ' This is not a receipt.';
                    }
                );
            });



            FR.readAsDataURL(this.files[0]);
            console.dir(FR);



        }



    }



    document.getElementById("inp").addEventListener("change", readFile);





</script>


@* For Computer Vision *@
<script type="text/javascript">
    function processImage() {
        // **********************************************
        // *** Update or verify the following values. ***
        // **********************************************

        let subscriptionKey = "";
        let endpoint = "https://task8.cognitiveservices.azure.com/";
        if (!subscriptionKey) { throw new Error('Please enter your subscription key and endpoint.'); }

        var uriBase = endpoint + "/vision/v3.0/read/analyze";

        // Display the image.
        var sourceImageUrl = document.getElementById("inputImage").value;
        document.querySelector("#sourceImage").src = sourceImageUrl;


        // This operation requires two REST API calls. One to submit the image
        // for processing, the other to retrieve the text found in the image.
        //
        // Make the first REST API call to submit the image for processing.
        $.ajax({
            url: uriBase,

            // Request headers.
            beforeSend: function (jqXHR) {
                jqXHR.setRequestHeader("Content-Type", "application/json");
                jqXHR.setRequestHeader("Ocp-Apim-Subscription-Key", subscriptionKey);
            },

            type: "POST",

            // Request body.
            data: JSON.stringify({ url: sourceImageUrl }),
        })

            .done(function (data, textStatus, jqXHR) {
                // Show progress.
                $("#responseTextArea").val("Text submitted. " +
                    "Waiting 10 seconds to retrieve the recognized text.");

                // Note: The response may not be immediately available. Text
                // recognition is an asynchronous operation that can take a variable
                // amount of time depending on the length of the text you want to
                // recognize. You may need to wait or retry the GET operation.
                //
                // Wait ten seconds before making the second REST API call.
                setTimeout(function () {
                    // "Operation-Location" in the response contains the URI
                    // to retrieve the recognized text.
                    var operationLocation = jqXHR.getResponseHeader("Operation-Location");

                    // Make the second REST API call and get the response.
                    $.ajax({
                        url: operationLocation,

                        // Request headers.
                        beforeSend: function (jqXHR) {
                            jqXHR.setRequestHeader("Content-Type", "application/json");
                            jqXHR.setRequestHeader(
                                "Ocp-Apim-Subscription-Key", subscriptionKey);
                        },

                        type: "GET",
                    })

                        .done(function (data) {
                            // Show formatted JSON on webpage.
                            var display = data.analyzeResult.readResults[0].lines;
                            var myStringArray = data.analyzeResult.readResults[0].lines;
                            var length = data.analyzeResult.readResults[0].lines.length;
                            console.dir(length);
                            var toBeDisplayed = "";
                            for (var i = 0; i < length; i++) {
                                //console.dir(myStringArray[i].text);
                                toBeDisplayed += myStringArray[i].text + " \r\n  ";
                                //Do something
                            }
                            console.dir(display);
                            console.dir(toBeDisplayed);
                            //$("#responseTextArea").val(JSON.stringify(data, null, 2));
                            $("#responseTextArea").val(toBeDisplayed);
                        })

                        .fail(function (jqXHR, textStatus, errorThrown) {
                            // Display error message.
                            var errorString = (errorThrown === "") ? "Error. " :
                                errorThrown + " (" + jqXHR.status + "): ";
                            errorString += (jqXHR.responseText === "") ? "" :
                                (jQuery.parseJSON(jqXHR.responseText).message) ?
                                    jQuery.parseJSON(jqXHR.responseText).message :
                                    jQuery.parseJSON(jqXHR.responseText).error.message;
                            alert(errorString);
                        });
                }, 10000);
            })

            .fail(function (jqXHR, textStatus, errorThrown) {
                // Put the JSON description into the text area.
                $("#responseTextArea").val(JSON.stringify(jqXHR, null, 2));

                // Display error message.
                var errorString = (errorThrown === "") ? "Error. " :
                    errorThrown + " (" + jqXHR.status + "): ";
                errorString += (jqXHR.responseText === "") ? "" :
                    (jQuery.parseJSON(jqXHR.responseText).message) ?
                        jQuery.parseJSON(jqXHR.responseText).message :
                        jQuery.parseJSON(jqXHR.responseText).error.message;
                alert(errorString);
            });
    };
</script>